// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces/api.go

package mock_interfaces

import (
	accounts "elyby/minecraft-skinsystem/api/accounts"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAccountsAPI is a mock of AccountsAPI interface
type MockAccountsAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAccountsAPIMockRecorder
}

// MockAccountsAPIMockRecorder is the mock recorder for MockAccountsAPI
type MockAccountsAPIMockRecorder struct {
	mock *MockAccountsAPI
}

// NewMockAccountsAPI creates a new mock instance
func NewMockAccountsAPI(ctrl *gomock.Controller) *MockAccountsAPI {
	mock := &MockAccountsAPI{ctrl: ctrl}
	mock.recorder = &MockAccountsAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockAccountsAPI) EXPECT() *MockAccountsAPIMockRecorder {
	return _m.recorder
}

// AccountInfo mocks base method
func (_m *MockAccountsAPI) AccountInfo(attribute string, value string) (*accounts.AccountInfoResponse, error) {
	ret := _m.ctrl.Call(_m, "AccountInfo", attribute, value)
	ret0, _ := ret[0].(*accounts.AccountInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccountInfo indicates an expected call of AccountInfo
func (_mr *MockAccountsAPIMockRecorder) AccountInfo(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AccountInfo", reflect.TypeOf((*MockAccountsAPI)(nil).AccountInfo), arg0, arg1)
}
